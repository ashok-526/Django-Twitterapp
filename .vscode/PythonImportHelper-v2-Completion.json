[
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "django.utils.timezone",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.utils.timezone",
        "description": "django.utils.timezone",
        "detail": "django.utils.timezone",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "re_path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "ListView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "DetailView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "CreateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "UpdateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "DeleteView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "UserPassesTestMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "static",
        "importPath": "django.conf.urls.static",
        "description": "django.conf.urls.static",
        "isExtraImport": true,
        "detail": "django.conf.urls.static",
        "documentation": {}
    },
    {
        "label": "serve",
        "importPath": "django.views.static",
        "description": "django.views.static",
        "isExtraImport": true,
        "detail": "django.views.static",
        "documentation": {}
    },
    {
        "label": "views",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "views",
        "importPath": "users",
        "description": "users",
        "isExtraImport": true,
        "detail": "users",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "UserCreationForm",
        "importPath": "django.contrib.auth.forms",
        "description": "django.contrib.auth.forms",
        "isExtraImport": true,
        "detail": "django.contrib.auth.forms",
        "documentation": {}
    },
    {
        "label": "Image",
        "importPath": "PIL",
        "description": "PIL",
        "isExtraImport": true,
        "detail": "PIL",
        "documentation": {}
    },
    {
        "label": "post_save",
        "importPath": "django.db.models.signals",
        "description": "django.db.models.signals",
        "isExtraImport": true,
        "detail": "django.db.models.signals",
        "documentation": {}
    },
    {
        "label": "receiver",
        "importPath": "django.dispatch",
        "description": "django.dispatch",
        "isExtraImport": true,
        "detail": "django.dispatch",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "blog.migrations.0001_initial",
        "description": "blog.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name=\"Post\",\n            fields=[\n                (",
        "detail": "blog.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "BlogConfig",
        "kind": 6,
        "importPath": "blog.apps",
        "description": "blog.apps",
        "peekOfCode": "class BlogConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'blog'",
        "detail": "blog.apps",
        "documentation": {}
    },
    {
        "label": "Post",
        "kind": 6,
        "importPath": "blog.models",
        "description": "blog.models",
        "peekOfCode": "class Post(models.Model):\n    title = models.CharField(max_length=100)\n    content = models.TextField()\n    date_posted = models.DateTimeField(default=timezone.now)\n    author = models.ForeignKey(User, on_delete=models.CASCADE)\n    def __str__(self):\n        return self.title\n    def get_absolute_url(self):\n        return reverse('post-detail', kwargs={'pk': self.pk})",
        "detail": "blog.models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "blog.urls",
        "description": "blog.urls",
        "peekOfCode": "urlpatterns = [\n    path('', PostListView.as_view(), name='blog-home'),\n    path('user/<str:username>', UserPostListView.as_view(), name='user-post'),\n    path('post/<int:pk>/', PostDetailView.as_view(), name='post-detail'),\n    path('post/new/', PostCreateView.as_view(), name='post-create'),\n    path('post/<int:pk>/update/', PostUpdateView.as_view(), name='post-update'),\n    path('post/<int:pk>/delete/', PostDeleteView.as_view(), name='post-delete'),\n    path('about/', views.about, name='blog-about')\n]",
        "detail": "blog.urls",
        "documentation": {}
    },
    {
        "label": "PostListView",
        "kind": 6,
        "importPath": "blog.views",
        "description": "blog.views",
        "peekOfCode": "class PostListView(ListView):\n    model = Post\n    template_name = 'blog/home.html'\n    context_object_name = 'posts'\n    ordering = ['-date_posted']\n    paginate_by = 5\nclass UserPostListView(ListView):\n    model = Post\n    template_name = 'blog/user_posts.html'\n    context_object_name = 'posts'",
        "detail": "blog.views",
        "documentation": {}
    },
    {
        "label": "UserPostListView",
        "kind": 6,
        "importPath": "blog.views",
        "description": "blog.views",
        "peekOfCode": "class UserPostListView(ListView):\n    model = Post\n    template_name = 'blog/user_posts.html'\n    context_object_name = 'posts'\n    paginate_by = 5\n    def get_queryset(self):\n        user = get_object_or_404(User, username=self.kwargs.get('username'))\n        return Post.objects.filter(author=user).order_by('-date_posted')\nclass PostDetailView(DetailView):\n    model = Post",
        "detail": "blog.views",
        "documentation": {}
    },
    {
        "label": "PostDetailView",
        "kind": 6,
        "importPath": "blog.views",
        "description": "blog.views",
        "peekOfCode": "class PostDetailView(DetailView):\n    model = Post\nclass PostCreateView(LoginRequiredMixin, CreateView):\n    model = Post\n    fields = ['title', 'content']\n    def form_valid(self, form):\n        form.instance.author = self.request.user\n        return super().form_valid(form)\nclass PostUpdateView(LoginRequiredMixin, UserPassesTestMixin, UpdateView):\n    model = Post",
        "detail": "blog.views",
        "documentation": {}
    },
    {
        "label": "PostCreateView",
        "kind": 6,
        "importPath": "blog.views",
        "description": "blog.views",
        "peekOfCode": "class PostCreateView(LoginRequiredMixin, CreateView):\n    model = Post\n    fields = ['title', 'content']\n    def form_valid(self, form):\n        form.instance.author = self.request.user\n        return super().form_valid(form)\nclass PostUpdateView(LoginRequiredMixin, UserPassesTestMixin, UpdateView):\n    model = Post\n    fields = ['title', 'content']\n    def form_valid(self, form):",
        "detail": "blog.views",
        "documentation": {}
    },
    {
        "label": "PostUpdateView",
        "kind": 6,
        "importPath": "blog.views",
        "description": "blog.views",
        "peekOfCode": "class PostUpdateView(LoginRequiredMixin, UserPassesTestMixin, UpdateView):\n    model = Post\n    fields = ['title', 'content']\n    def form_valid(self, form):\n        form.instance.author = self.request.user\n        return super().form_valid(form)\n    def test_func(self):\n        post = self.get_object()\n        return self.request.user == post.author\nclass PostDeleteView(LoginRequiredMixin, UserPassesTestMixin, DeleteView):",
        "detail": "blog.views",
        "documentation": {}
    },
    {
        "label": "PostDeleteView",
        "kind": 6,
        "importPath": "blog.views",
        "description": "blog.views",
        "peekOfCode": "class PostDeleteView(LoginRequiredMixin, UserPassesTestMixin, DeleteView):\n    model = Post\n    success_url = '/'\n    def test_func(self):\n        post = self.get_object()\n        return self.request.user == post.author\ndef about(request):\n    return render(request, \"blog/about.html\", {\"title\": \"about\"})",
        "detail": "blog.views",
        "documentation": {}
    },
    {
        "label": "about",
        "kind": 2,
        "importPath": "blog.views",
        "description": "blog.views",
        "peekOfCode": "def about(request):\n    return render(request, \"blog/about.html\", {\"title\": \"about\"})",
        "detail": "blog.views",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "django_blog.asgi",
        "description": "django_blog.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "django_blog.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "django_blog.settings",
        "description": "django_blog.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-!th42)qj1aj-im831%uvxhrvpj!2r8-8m@#)ezw+1n#a+fx=2('\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = False\nALLOWED_HOSTS = ['127.0.0.1','.vercel.app','.now.sh']\n# Application definition\nINSTALLED_APPS = [",
        "detail": "django_blog.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "django_blog.settings",
        "description": "django_blog.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-!th42)qj1aj-im831%uvxhrvpj!2r8-8m@#)ezw+1n#a+fx=2('\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = False\nALLOWED_HOSTS = ['127.0.0.1','.vercel.app','.now.sh']\n# Application definition\nINSTALLED_APPS = [\n    'blog.apps.BlogConfig',\n    'users.apps.UsersConfig',\n    'django.contrib.admin',\n    'django.contrib.auth',",
        "detail": "django_blog.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "django_blog.settings",
        "description": "django_blog.settings",
        "peekOfCode": "DEBUG = False\nALLOWED_HOSTS = ['127.0.0.1','.vercel.app','.now.sh']\n# Application definition\nINSTALLED_APPS = [\n    'blog.apps.BlogConfig',\n    'users.apps.UsersConfig',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "django_blog.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "django_blog.settings",
        "description": "django_blog.settings",
        "peekOfCode": "ALLOWED_HOSTS = ['127.0.0.1','.vercel.app','.now.sh']\n# Application definition\nINSTALLED_APPS = [\n    'blog.apps.BlogConfig',\n    'users.apps.UsersConfig',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',",
        "detail": "django_blog.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "django_blog.settings",
        "description": "django_blog.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'blog.apps.BlogConfig',\n    'users.apps.UsersConfig',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'crispy_forms',",
        "detail": "django_blog.settings",
        "documentation": {}
    },
    {
        "label": "CRISPY_TEMPLATE_PACK",
        "kind": 5,
        "importPath": "django_blog.settings",
        "description": "django_blog.settings",
        "peekOfCode": "CRISPY_TEMPLATE_PACK = 'bootstrap4'\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'whitenoise.middleware.WhiteNoiseMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',",
        "detail": "django_blog.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "django_blog.settings",
        "description": "django_blog.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'whitenoise.middleware.WhiteNoiseMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]",
        "detail": "django_blog.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "django_blog.settings",
        "description": "django_blog.settings",
        "peekOfCode": "ROOT_URLCONF = 'django_blog.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "django_blog.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "django_blog.settings",
        "description": "django_blog.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "django_blog.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "django_blog.settings",
        "description": "django_blog.settings",
        "peekOfCode": "WSGI_APPLICATION = 'django_blog.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/4.1/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation",
        "detail": "django_blog.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "django_blog.settings",
        "description": "django_blog.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "django_blog.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "django_blog.settings",
        "description": "django_blog.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "django_blog.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "django_blog.settings",
        "description": "django_blog.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = '/static/'\n# if DEBUG:\n    # During development, serve static files from the `public/static` directory\n# STATICFILES_DIRS = [os.path.join(BASE_DIR, 'media')]",
        "detail": "django_blog.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "django_blog.settings",
        "description": "django_blog.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = '/static/'\n# if DEBUG:\n    # During development, serve static files from the `public/static` directory\n# STATICFILES_DIRS = [os.path.join(BASE_DIR, 'media')]\n# else:",
        "detail": "django_blog.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "django_blog.settings",
        "description": "django_blog.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = '/static/'\n# if DEBUG:\n    # During development, serve static files from the `public/static` directory\n# STATICFILES_DIRS = [os.path.join(BASE_DIR, 'media')]\n# else:\n    # In production, collect all static files into `staticfiles`",
        "detail": "django_blog.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "django_blog.settings",
        "description": "django_blog.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = '/static/'\n# if DEBUG:\n    # During development, serve static files from the `public/static` directory\n# STATICFILES_DIRS = [os.path.join(BASE_DIR, 'media')]\n# else:\n    # In production, collect all static files into `staticfiles`\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')",
        "detail": "django_blog.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "django_blog.settings",
        "description": "django_blog.settings",
        "peekOfCode": "STATIC_URL = '/static/'\n# if DEBUG:\n    # During development, serve static files from the `public/static` directory\n# STATICFILES_DIRS = [os.path.join(BASE_DIR, 'media')]\n# else:\n    # In production, collect all static files into `staticfiles`\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')\n# Media files (Uploaded by users)\nMEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')",
        "detail": "django_blog.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_ROOT",
        "kind": 5,
        "importPath": "django_blog.settings",
        "description": "django_blog.settings",
        "peekOfCode": "STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')\n# Media files (Uploaded by users)\nMEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\nCRISPY_TEMPLATE_PACK = 'bootstrap4'\nLOGIN_REDIRECT_URL = 'blog-home'\nLOGIN_URL = 'login'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nSTATICFILES_STORAGE= \"whitenoise.storage.CompressedManifestStaticFilesStorage\"",
        "detail": "django_blog.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "kind": 5,
        "importPath": "django_blog.settings",
        "description": "django_blog.settings",
        "peekOfCode": "MEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\nCRISPY_TEMPLATE_PACK = 'bootstrap4'\nLOGIN_REDIRECT_URL = 'blog-home'\nLOGIN_URL = 'login'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nSTATICFILES_STORAGE= \"whitenoise.storage.CompressedManifestStaticFilesStorage\"\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nEMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'",
        "detail": "django_blog.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_ROOT",
        "kind": 5,
        "importPath": "django_blog.settings",
        "description": "django_blog.settings",
        "peekOfCode": "MEDIA_ROOT = os.path.join(BASE_DIR, 'media')\nCRISPY_TEMPLATE_PACK = 'bootstrap4'\nLOGIN_REDIRECT_URL = 'blog-home'\nLOGIN_URL = 'login'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nSTATICFILES_STORAGE= \"whitenoise.storage.CompressedManifestStaticFilesStorage\"\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nEMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'\nEMAIL_HOST = 'smtp.gmail.com'",
        "detail": "django_blog.settings",
        "documentation": {}
    },
    {
        "label": "CRISPY_TEMPLATE_PACK",
        "kind": 5,
        "importPath": "django_blog.settings",
        "description": "django_blog.settings",
        "peekOfCode": "CRISPY_TEMPLATE_PACK = 'bootstrap4'\nLOGIN_REDIRECT_URL = 'blog-home'\nLOGIN_URL = 'login'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nSTATICFILES_STORAGE= \"whitenoise.storage.CompressedManifestStaticFilesStorage\"\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nEMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'\nEMAIL_HOST = 'smtp.gmail.com'\nEMAIL_PORT = 587",
        "detail": "django_blog.settings",
        "documentation": {}
    },
    {
        "label": "LOGIN_REDIRECT_URL",
        "kind": 5,
        "importPath": "django_blog.settings",
        "description": "django_blog.settings",
        "peekOfCode": "LOGIN_REDIRECT_URL = 'blog-home'\nLOGIN_URL = 'login'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nSTATICFILES_STORAGE= \"whitenoise.storage.CompressedManifestStaticFilesStorage\"\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nEMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'\nEMAIL_HOST = 'smtp.gmail.com'\nEMAIL_PORT = 587\nEMAIL_USE_TLS = True",
        "detail": "django_blog.settings",
        "documentation": {}
    },
    {
        "label": "LOGIN_URL",
        "kind": 5,
        "importPath": "django_blog.settings",
        "description": "django_blog.settings",
        "peekOfCode": "LOGIN_URL = 'login'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nSTATICFILES_STORAGE= \"whitenoise.storage.CompressedManifestStaticFilesStorage\"\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nEMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'\nEMAIL_HOST = 'smtp.gmail.com'\nEMAIL_PORT = 587\nEMAIL_USE_TLS = True\nEMAIL_HOST_USER = 'xxxxxxxxxxxxx'",
        "detail": "django_blog.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "django_blog.settings",
        "description": "django_blog.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nEMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'\nEMAIL_HOST = 'smtp.gmail.com'\nEMAIL_PORT = 587\nEMAIL_USE_TLS = True\nEMAIL_HOST_USER = 'xxxxxxxxxxxxx'\nEMAIL_HOST_PASSWORD = 'xxxxxxxxxxx'",
        "detail": "django_blog.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_BACKEND",
        "kind": 5,
        "importPath": "django_blog.settings",
        "description": "django_blog.settings",
        "peekOfCode": "EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'\nEMAIL_HOST = 'smtp.gmail.com'\nEMAIL_PORT = 587\nEMAIL_USE_TLS = True\nEMAIL_HOST_USER = 'xxxxxxxxxxxxx'\nEMAIL_HOST_PASSWORD = 'xxxxxxxxxxx'",
        "detail": "django_blog.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_HOST",
        "kind": 5,
        "importPath": "django_blog.settings",
        "description": "django_blog.settings",
        "peekOfCode": "EMAIL_HOST = 'smtp.gmail.com'\nEMAIL_PORT = 587\nEMAIL_USE_TLS = True\nEMAIL_HOST_USER = 'xxxxxxxxxxxxx'\nEMAIL_HOST_PASSWORD = 'xxxxxxxxxxx'",
        "detail": "django_blog.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_PORT",
        "kind": 5,
        "importPath": "django_blog.settings",
        "description": "django_blog.settings",
        "peekOfCode": "EMAIL_PORT = 587\nEMAIL_USE_TLS = True\nEMAIL_HOST_USER = 'xxxxxxxxxxxxx'\nEMAIL_HOST_PASSWORD = 'xxxxxxxxxxx'",
        "detail": "django_blog.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_USE_TLS",
        "kind": 5,
        "importPath": "django_blog.settings",
        "description": "django_blog.settings",
        "peekOfCode": "EMAIL_USE_TLS = True\nEMAIL_HOST_USER = 'xxxxxxxxxxxxx'\nEMAIL_HOST_PASSWORD = 'xxxxxxxxxxx'",
        "detail": "django_blog.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_HOST_USER",
        "kind": 5,
        "importPath": "django_blog.settings",
        "description": "django_blog.settings",
        "peekOfCode": "EMAIL_HOST_USER = 'xxxxxxxxxxxxx'\nEMAIL_HOST_PASSWORD = 'xxxxxxxxxxx'",
        "detail": "django_blog.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_HOST_PASSWORD",
        "kind": 5,
        "importPath": "django_blog.settings",
        "description": "django_blog.settings",
        "peekOfCode": "EMAIL_HOST_PASSWORD = 'xxxxxxxxxxx'",
        "detail": "django_blog.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "django_blog.urls",
        "description": "django_blog.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('blog.urls')),\n    path('register/', user_views.register, name='register'),\n    path('profile/', user_views.profile, name='profile'),\n    path('login/', auth_views.LoginView.as_view(template_name='users/login.html'), name='login'),\n    path('logout/', auth_views.LogoutView.as_view(template_name='users/logout.html'), name='logout'),\n    path('password-reset/', auth_views.PasswordResetView.as_view(template_name='users/password_reset.html'),\n         name='password_reset'),\n    path('password-reset/done',",
        "detail": "django_blog.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "django_blog.wsgi",
        "description": "django_blog.wsgi",
        "peekOfCode": "application = get_wsgi_application()\napp=application",
        "detail": "django_blog.wsgi",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "users.migrations.0001_initial",
        "description": "users.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name=\"Profile\",\n            fields=[\n                (",
        "detail": "users.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "UsersConfig",
        "kind": 6,
        "importPath": "users.apps",
        "description": "users.apps",
        "peekOfCode": "class UsersConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"users\"\n    def ready(self):\n        import users.signals",
        "detail": "users.apps",
        "documentation": {}
    },
    {
        "label": "UserRegisterForm",
        "kind": 6,
        "importPath": "users.forms",
        "description": "users.forms",
        "peekOfCode": "class UserRegisterForm(UserCreationForm):\n    email = forms.EmailField()\n    class Meta:\n        model = User\n        fields = ['username', 'email', 'password1', 'password2']\nclass UserUpdateForm(forms.ModelForm):\n    email = forms.EmailField()\n    class Meta:\n        model = User\n        fields = ['username', 'email']",
        "detail": "users.forms",
        "documentation": {}
    },
    {
        "label": "UserUpdateForm",
        "kind": 6,
        "importPath": "users.forms",
        "description": "users.forms",
        "peekOfCode": "class UserUpdateForm(forms.ModelForm):\n    email = forms.EmailField()\n    class Meta:\n        model = User\n        fields = ['username', 'email']\nclass ProfileUpdateForm(forms.ModelForm):\n    class Meta:\n        model = Profile\n        fields = ['image']",
        "detail": "users.forms",
        "documentation": {}
    },
    {
        "label": "ProfileUpdateForm",
        "kind": 6,
        "importPath": "users.forms",
        "description": "users.forms",
        "peekOfCode": "class ProfileUpdateForm(forms.ModelForm):\n    class Meta:\n        model = Profile\n        fields = ['image']",
        "detail": "users.forms",
        "documentation": {}
    },
    {
        "label": "Profile",
        "kind": 6,
        "importPath": "users.models",
        "description": "users.models",
        "peekOfCode": "class Profile(models.Model):\n    user = models.OneToOneField(User, on_delete=models.CASCADE)\n    image = models.ImageField(default='default.jpeg', upload_to='profile_pics')\n    def __str__(self):\n        return f'{self.user.username} Profile'\n    def save(self, *args, **kwargs):\n        super().save(*args, **kwargs)\n        img = Image.open(self.image.path)\n        if img.height > 300 or img.width > 300:\n            output_size = (300, 300)",
        "detail": "users.models",
        "documentation": {}
    },
    {
        "label": "create_profile",
        "kind": 2,
        "importPath": "users.signals",
        "description": "users.signals",
        "peekOfCode": "def create_profile(sender, instance, created, **kwargs):\n    if created:\n        Profile.objects.create(user=instance)\n@receiver(post_save, sender=User)\ndef save_profile(sender, instance, **kwargs):\n    instance.profile.save()",
        "detail": "users.signals",
        "documentation": {}
    },
    {
        "label": "save_profile",
        "kind": 2,
        "importPath": "users.signals",
        "description": "users.signals",
        "peekOfCode": "def save_profile(sender, instance, **kwargs):\n    instance.profile.save()",
        "detail": "users.signals",
        "documentation": {}
    },
    {
        "label": "register",
        "kind": 2,
        "importPath": "users.views",
        "description": "users.views",
        "peekOfCode": "def register(request):\n    if request.method == 'POST':\n        form = UserRegisterForm(request.POST)\n        if form.is_valid():\n            form.save()\n            username = form.cleaned_data.get('username')\n            messages.success(request, f'You account has been created, now you can login.')\n            return redirect('login')\n    else:\n        form = UserRegisterForm()",
        "detail": "users.views",
        "documentation": {}
    },
    {
        "label": "profile",
        "kind": 2,
        "importPath": "users.views",
        "description": "users.views",
        "peekOfCode": "def profile(request):\n    if request.method == 'POST':\n        u_form = UserUpdateForm(request.POST, instance=request.user)\n        p_form = ProfileUpdateForm(request.POST, request.FILES, instance=request.user.profile)\n        if u_form.is_valid() and p_form.is_valid():\n            u_form.save()\n            p_form.save()\n            messages.success(request, f'You account has been updated!')\n            return redirect('profile')\n    else:",
        "detail": "users.views",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'django_blog.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]